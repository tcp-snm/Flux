// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: roles.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getUserRolesByUserName = `-- name: GetUserRolesByUserName :many
SELECT user_id, role_name FROM user_roles WHERE user_id = $1
`

func (q *Queries) GetUserRolesByUserName(ctx context.Context, userID uuid.UUID) ([]UserRole, error) {
	rows, err := q.db.Query(ctx, getUserRolesByUserName, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []UserRole
	for rows.Next() {
		var i UserRole
		if err := rows.Scan(&i.UserID, &i.RoleName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
